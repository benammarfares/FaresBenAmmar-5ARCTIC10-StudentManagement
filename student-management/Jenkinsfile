pipeline {
    agent any
    
    tools {
        jdk 'JDK17'
        maven 'Maven3'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Starting checkout...'
                checkout scm
            }
        }
        
        stage('Test') {
            steps {
                dir('student-management') {
                    sh 'mvn test -Dspring.profiles.active=test'
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('SonarQube Analysis') {
            environment {
                SONAR_TOKEN = credentials('sonarqube-token')
            }
            steps {
                dir('student-management') {
                    withSonarQubeEnv('SonarQube') {
                        sh '''
                            mvn clean verify sonar:sonar \
                            -Dsonar.projectKey=student-management \
                            -Dsonar.projectName='Student Management System' \
                            -Dsonar.host.url=http://localhost:9000 \
                            -Dsonar.token=${SONAR_TOKEN} \
                            -Dsonar.java.binaries=target/classes
                        '''
                    }
                }
            }
        }
        
        stage('Quality Gate') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage('Build and Push to Nexus') {
            steps {
                dir('student-management') {
                    sh 'mvn clean package -DskipTests'
                    sh 'mvn deploy -DskipTests'
                }
            }
        }
    }
}